- content_for :title, @contest.title

- if current_user && current_user.staff?
  #contest-admin.admin-wrench.btn-group
    %button{type: 'button', class: 'btn btn-default dropdown-toggle',
        data: {toggle: 'dropdown'}, aria: {expanded: 'false'}}
      %i.fa.fa-wrench
    %ul.dropdown-menu.pull-right{role: 'menu'}
      %li
        %a{href: edit_contest_path(@contest)}
          Edit contest


.row
  .col-xs-9
    .panel{ class: "panel-#{contest_class_by_status(@contest)}" }
      .panel-heading
        .panel-title
          %h1.contest-title
            %a.anchor{id: 'contest-heading-anchor'}= @contest.title
      .panel-body
        .contest-content
          = raw @contest.description_baked
        .timeframe
          = render partial: 'contest_progress_bar', locals: {progress: contest_progress(@contest)}
          .timeframe-group
            %label{for: "#{@contest.id}-start"}= 'start at'
            %time{id: "#{@contest.id}-start", datetime: @contest.started_at}= @contest.started_at.to_formatted_s(:short)
          .timeframe-group
            %label{for: "#{@contest.id}-end"}= 'end at'
            %time{id: "#{@contest.id}-end", datetime: @contest.end_at}= @contest.end_at.to_formatted_s(:short)
          - if @contest.type == 'DelayableContest'
            .timeframe-group
              %label{for: "#{@contest.id}-delayed"}= 'delayed till'
              %time{id: "#{@contest.id}-delayed", datetime: @contest.delayed_till}= @contest.delayed_till.to_formatted_s(:short)


    .contest-problems
      - @contest.problems.each_with_index do |p,i|
        = render partial: 'problems/contest_problem', locals: {:@problem => p, index: i}


  .col-xs-3
    .panel.panel-default.sticky
      .panel-heading
        Actions
      %nav.action-list
        %ul.contest-actions.list-unstyled{role: 'tablist'}
          - if @contest.started?
            - if current_user
              - unless @contest.ended?
                %li.action.action-success
                  %a{ href: '#', data: { toggle: 'modal', target: '#submit-solution' } }
                    %i.fa.fa-plus-circle
                    Submit
            %li.action
              %a{ href: contest_solutions_path(@contest.slug, @contest.id) }
                %i.fa.fa-history
                Submitted records
            %li.action
              %a{ href: contest_ranking_path(@contest.slug, @contest.id) }
                %i.fa.fa-list
                Ranking
          .divider
          %label Problem list
          %ul.nav.nav-stacked.list-unstyled.problem-list
            %li
              %a{ href: "#contest-heading-anchor", data: { scroll: true } } Contest infomation
            - @contest.problems.each_with_index do |p,i|
              %li
                %a{ href: "##{unique_anchor_id(p)}", data: { scroll: true } }
                  %b= "#{alphabet_offset(i)}:"
                  = p.title
          .divider
          %label Time
          %span
            %time.realtime{data: {unix: Time.zone.now.strftime('%s')}}= Time.zone.now.strftime('%T')


#submit-solution.modal.fade{tabindex: '-1', role: 'dialog', aria: {labelledby: 'Submit new solution', hidden: 'true'}}
  .modal-dialog.modal-lg
    .modal-content
      = form_for :solution, {url: contest_solutions_path(@contest.slug, @contest.id), accept: {charset: 'UTF-8'}, remote: true, method: :post} do |f|
        .modal-header
          %button{type: 'button', class: 'close', data: {dismiss: 'modal', label: 'Close'}}
            %span{aria: {hidden: 'true'}}
              &times;
          %h4#import-problem-label.modal-title
            Submit new solution
        .modal-body
          .form-horizontal
            .form-group
              .col-xs-9
                = f.label :contest_problem_id
                = f.select :contest_problem_id, contest_problem_select_options(@contest.problems), {}, class: 'form-control'
              .col-xs-3
                = f.label :platform
                = f.select :platform, platform_select_options, {}, class: 'form-control'
            .form-group
              .col-xs-12
                = render partial: 'components/source_editor',  |
                  locals: {                                    |
                  preview_url: '',                             |
                  ace_mode: 'java',                            |
                  indent_width: %w(2 4 8),                     |
                  tab_label: 'Source code',                    |
                  preview_label: 'Preview',
                  attribute: f.text_area(:source) }
        .modal-footer
          %button{type: 'button', class: 'btn btn-default', data: {dismiss: 'modal'}}
            Close
          %button{type: 'submit', class: 'btn btn-primary'}
            Submit
